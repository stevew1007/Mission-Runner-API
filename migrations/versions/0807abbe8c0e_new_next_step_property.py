"""new next_step property

Revision ID: 0807abbe8c0e
Revises: 703518b163b0
Create Date: 2023-04-17 23:04:53.469804

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0807abbe8c0e'
down_revision = '703518b163b0'
branch_labels = None
depends_on = None


def upgrade():
    pass
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('change_log',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('object_type', sa.String(length=64), nullable=False),
    # sa.Column('object_id', sa.Integer(), nullable=False),
    # sa.Column('operation', sa.String(length=10), nullable=False),
    # sa.Column('requester_id', sa.Integer(), nullable=False),
    # sa.Column('timestamp', sa.DateTime(), nullable=False),
    # sa.Column('attribute_name', sa.String(length=64), nullable=False),
    # sa.Column('old_value', sa.String(length=255), nullable=False),
    # sa.Column('new_value', sa.String(length=255), nullable=False),
    # sa.PrimaryKeyConstraint('id', name=op.f('pk_change_log'))
    # )
    # with op.batch_alter_table('change_log', schema=None) as batch_op:
    #     batch_op.create_index(batch_op.f('ix_change_log_object_id'), ['object_id'], unique=False)
    #     batch_op.create_index(batch_op.f('ix_change_log_requester_id'), ['requester_id'], unique=False)

    # op.create_table('users',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('username', sa.String(length=64), nullable=False),
    # sa.Column('email', sa.String(length=120), nullable=False),
    # sa.Column('im_number', sa.String(length=20), nullable=False),
    # sa.Column('password_hash', sa.String(length=128), nullable=False),
    # sa.Column('role', sa.String(length=20), nullable=False),
    # sa.Column('birthday', sa.DateTime(), nullable=False),
    # sa.Column('last_seen', sa.DateTime(), nullable=False),
    # sa.Column('default_account_id', sa.Integer(), nullable=True),
    # sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    # )
    # with op.batch_alter_table('users', schema=None) as batch_op:
    #     batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
    #     batch_op.create_index(batch_op.f('ix_users_im_number'), ['im_number'], unique=True)
    #     batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    # op.create_table('accounts',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('name', sa.String(length=50), nullable=False),
    # sa.Column('created', sa.DateTime(), nullable=False),
    # sa.Column('activated', sa.Boolean(), nullable=False),
    # sa.Column('lp_point', sa.Integer(), nullable=False),
    # sa.Column('owner_id', sa.Integer(), nullable=False),
    # sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_accounts_owner_id_users')),
    # sa.PrimaryKeyConstraint('id', name=op.f('pk_accounts')),
    # sa.UniqueConstraint('name', name=op.f('uq_accounts_name'))
    # )
    # with op.batch_alter_table('accounts', schema=None) as batch_op:
    #     batch_op.create_index(batch_op.f('ix_accounts_owner_id'), ['owner_id'], unique=False)

    # op.create_table('tokens',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('access_token', sa.String(length=64), nullable=False),
    # sa.Column('access_expiration', sa.DateTime(), nullable=False),
    # sa.Column('refresh_token', sa.String(length=64), nullable=False),
    # sa.Column('refresh_expiration', sa.DateTime(), nullable=False),
    # sa.Column('user_id', sa.Integer(), nullable=False),
    # sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_tokens_user_id_users')),
    # sa.PrimaryKeyConstraint('id', name=op.f('pk_tokens'))
    # )
    # with op.batch_alter_table('tokens', schema=None) as batch_op:
    #     batch_op.create_index(batch_op.f('ix_tokens_access_token'), ['access_token'], unique=False)
    #     batch_op.create_index(batch_op.f('ix_tokens_refresh_token'), ['refresh_token'], unique=False)
    #     batch_op.create_index(batch_op.f('ix_tokens_user_id'), ['user_id'], unique=False)

    # op.create_table('mission',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('title', sa.String(), nullable=False),
    # sa.Column('galaxy', sa.String(), nullable=False),
    # sa.Column('published', sa.DateTime(), nullable=False),
    # sa.Column('created', sa.DateTime(), nullable=False),
    # sa.Column('expired', sa.DateTime(), nullable=False),
    # sa.Column('bounty', sa.Integer(), nullable=False),
    # sa.Column('status', sa.String(length=20), nullable=False),
    # sa.Column('publisher_id', sa.Integer(), nullable=False),
    # sa.Column('runner_id', sa.Integer(), nullable=True),
    # sa.ForeignKeyConstraint(['publisher_id'], ['accounts.id'], name=op.f('fk_mission_publisher_id_accounts')),
    # sa.ForeignKeyConstraint(['runner_id'], ['users.id'], name=op.f('fk_mission_runner_id_users')),
    # sa.PrimaryKeyConstraint('id', name=op.f('pk_mission'))
    # )
    # with op.batch_alter_table('mission', schema=None) as batch_op:
    #     batch_op.create_index(batch_op.f('ix_mission_publisher_id'), ['publisher_id'], unique=False)
    #     batch_op.create_index(batch_op.f('ix_mission_runner_id'), ['runner_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('mission', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_mission_runner_id'))
        batch_op.drop_index(batch_op.f('ix_mission_publisher_id'))

    op.drop_table('mission')
    with op.batch_alter_table('tokens', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tokens_user_id'))
        batch_op.drop_index(batch_op.f('ix_tokens_refresh_token'))
        batch_op.drop_index(batch_op.f('ix_tokens_access_token'))

    op.drop_table('tokens')
    with op.batch_alter_table('accounts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_accounts_owner_id'))

    op.drop_table('accounts')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_im_number'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('change_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_change_log_requester_id'))
        batch_op.drop_index(batch_op.f('ix_change_log_object_id'))

    op.drop_table('change_log')
    # ### end Alembic commands ###
